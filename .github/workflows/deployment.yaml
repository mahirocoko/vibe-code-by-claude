name: Deploy

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'      # Matches production tags like v1.0.0
      - 'v*.*.*-rc.*'   # Matches staging tags like v1.0.0-rc.1, v1.0.0-rc.2, etc.

jobs:
  dockerize_and_push:
    name: Dockerize & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Short SHA
        id: short_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase Repository
        id: repository
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Determine Deployment Environment
        id: env
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          if [[ "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "environment=prod" >> $GITHUB_ENV
          elif [[ "$TAG_NAME" =~ -rc\..*$ ]]; then
            echo "environment=stg" >> $GITHUB_ENV
          else
            echo "Invalid tag format" && exit 1
          fi

      - name: Build and Push Container Image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            ghcr.io/${{ steps.repository.outputs.lowercase }}:${{ steps.short_sha.outputs.sha_short }}

      - name: Set Image Name Output
        id: set_image_name
        run: echo "image_name=ghcr.io/${{ steps.repository.outputs.lowercase }}:${{ steps.short_sha.outputs.sha_short }}" >> $GITHUB_OUTPUT

    outputs:
      image_name: ${{ steps.set_image_name.outputs.image_name }}
      environment: ${{ env.environment }}

  deploy:
    name: Deploy to Nortezh
    needs: dockerize_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Nortezh
        uses: Nortezh/nortezh-action@v1.0.5
        with:
          action: deployment.create-revision
          project: hello-world02
          location: olufy-0
          name: website-${{ needs.dockerize_and_push.outputs.environment }}
          image: ${{ needs.dockerize_and_push.outputs.image_name }}
          type: WebService
        env:
          SA_AUTH_EMAIL: ${{ secrets.NTZ_SVA_EMAIL }}
          SA_AUTH_KEY: ${{ secrets.NTZ_SVA_KEY }}
