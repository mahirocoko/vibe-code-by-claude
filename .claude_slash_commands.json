{
  "commands": [
    {
      "name": "commit",
      "description": "Stage all changes and create a commit with proper format",
      "instructions": "Follow these steps to commit changes:\n\n1. Run `git status` to see all changes\n2. Run `git diff --stat` to summarize changes\n3. Analyze the changes and determine the appropriate commit type (feat/fix/chore/docs/style/refactor/test/perf)\n4. Stage all changes with `git add -A`\n5. Create a commit following the project's commit standards:\n   - Format: `<type>: <subject>` (max 50 chars)\n   - Include descriptive body with bullet points\n   - Add Claude signature at the end\n6. Show the commit result\n\nIMPORTANT: Follow the commit standards in CLAUDE.md"
    },
    {
      "name": "push",
      "description": "Push commits to remote repository",
      "instructions": "Push the current branch to remote:\n\n1. Check current branch with `git branch --show-current`\n2. Check if there are commits to push with `git status`\n3. Push to remote with `git push origin <branch>`\n4. Show push result and any warnings"
    },
    {
      "name": "commit-push",
      "description": "Commit all changes and push to remote",
      "instructions": "Combine commit and push operations:\n\n1. First, follow all steps from /commit command\n2. After successful commit, immediately push to remote\n3. Show both commit and push results"
    },
    {
      "name": "commit-amend",
      "description": "Amend the last commit",
      "instructions": "Amend the previous commit:\n\n1. Check the last commit with `git log -1`\n2. Show current changes with `git status`\n3. Stage any new changes with `git add -A`\n4. Amend commit with `git commit --amend`\n5. Keep the same commit message unless user specifies otherwise\n6. Show the amended commit"
    },
    {
      "name": "commit-undo",
      "description": "Undo the last commit (keep changes)",
      "instructions": "Undo the last commit while keeping changes:\n\n1. Show the last commit with `git log -1`\n2. Undo with `git reset --soft HEAD~1`\n3. Show status to confirm changes are preserved\n4. Inform user that changes are unstaged and ready for a new commit"
    }
  ]
}